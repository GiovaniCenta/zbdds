ZBDD, which stands for Zero-Suppressed Binary Decision Diagram, are an extension of Binary Decision Diagrams (BDDs) and are designed to overcome the exponential memory consumption that BDDs can face when representing sparse or zero-suppressed sets. By efficiently encoding the information about the absence of certain combinations of variables, ZBDDs can significantly reduce the memory requirements while still allowing for efficient operations such as set intersection, union, and complementation.
Due to their compact representation and efficient algorithms, ZBDDs find applications in various domains such as formal verification, combinatorial optimization, and logic synthesis. They enable efficient analysis and manipulation of large Boolean functions, making them a valuable tool in computer engineering and related fields.
This code is a quick implementation of ZBDD in python for a Computer Engineering University Class at UFRGS.
